#! /usr/bin/env python

import argparse
import sys
import os

BASE_DIR   = os.path.dirname(os.path.abspath(__file__))
PARENT_DIR = os.path.dirname(BASE_DIR)

sys.path.append(PARENT_DIR+"/lib/python")

import urltester.config
import urltester.server

parser = argparse.ArgumentParser(description="UrlTester Server")
parser.add_argument("-v","--version", action="version", version="UrlTester Server "+urltester.config.VERSION)
parser.add_argument("-S","--server", action="store_true", help="Run as server",dest="run_server")
parser.add_argument("-D","--demo", action="store_true", help="Run demo",dest="run_demo")
parser.add_argument("-C","--show_config", action="store_true", help="Show config",dest="show_config")
fake_settings=urltester.config.Settings()

for label,metavar,default,helpmsg in [ 
        ("http_host","HOSTNAME",fake_settings.http_host,"Bind host"),
        ("title","TITLE",fake_settings.title,"Server name"),
        ("template_dir","DIR",fake_settings.template_dir,"Template directory"),
        ("proxy_host","HOSTNAME",fake_settings.proxy_host,"Proxy hostname"),
        ("proxy_user","USERNAME",fake_settings.proxy_user,"Proxy user"),
        ("proxy_password","PASSWORD",fake_settings.proxy_password,"Proxy password"),
        ("base_context","PATH",fake_settings.base_context,"Base context"),
]:
    parser.add_argument("--"+label, action="store",dest=label,metavar=metavar,
                        help="%s (default: %s)" % (helpmsg,default) )

for label,metavar,default,helpmsg in [ 
        ("http_port","PORT",fake_settings.http_port,"Bind port"),
        ("proxy_port","PORT",fake_settings.proxy_port,"Proxy port"),
]:
    parser.add_argument("--"+label, action="store",dest=label,metavar=metavar,type=int,
                        help="%s (default: %s)" % (helpmsg,default) )

parser.add_argument("--config", action="append",dest="paths",metavar="FILE",
                    help="Config file (default: %s)" % fake_settings.paths )

args=parser.parse_args(sys.argv[1:])

settings_kwargs={}
for k in ["http_host","http_port",
          "paths","title",
          "template_dir","base_context",
          "proxy_host","proxy_port","proxy_user","proxy_password"]:
    param=getattr(args,k,None)
    if param==None: continue
    settings_kwargs[k]=param

settings=urltester.config.Settings(**settings_kwargs)
urltester=urltester.server.UrlTester(settings)

if args.show_config:
    settings.show_config()
    sys.exit(0)

if args.run_demo:
    urltester.run_demo()

if args.run_server:
    urltester.run_server()

